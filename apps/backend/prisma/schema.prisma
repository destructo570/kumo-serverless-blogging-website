generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  first_name     String?
  last_name     String?
  password String
  posts    Post[]
  likes    Likes[]   @relation("UserToLikes")
  comments Comment[]
  comment_likes     CommentLikes[]
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  description   String @default("")
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  likes     Likes[]  @relation("PostToLikes")
  createdAt DateTime @default(now())
  likes_count Int @default(0)
  coverImage String @default("")
  comments Comment[]
}

model Likes {
  id        String   @id @default(uuid())
  post      Post @relation(fields: [postId], references: [id], name: "PostToLikes", onDelete: Cascade)
  postId    String  
  user      User @relation(fields: [userId], references: [id], name: "UserToLikes", onDelete: Cascade)  
  userId    String
  count Int @default(0)
  createdAt DateTime @default(now())
}

model Comment {
  id        String   @id @default(uuid())
  message   String
  post      Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)  
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  parent    Comment? @relation(fields: [parentId], references: [id], name: "ParentChild", onDelete: Cascade)
  children  Comment[] @relation("ParentChild")
  parentId  String?
  likes      CommentLikes[]
}

model CommentLikes {
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)  
  comment   Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId    String
  commentId String
  createdAt DateTime @default(now())

  @@id([userId, commentId])
}